plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "com.google.protobuf" version "0.8.11"
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.gradle.org/gradle/libs-releases'
    }
}

sourceSets {
    libsDirName = 'lib'
    main {
        proto {
            srcDir '../proto'
        }
    }
    generated {
        java.srcDirs = [
            "${buildDir}/generated/sources/annotationProcessor/java/main", // dagger
            "${buildDir}/generated/source/proto/main/java"                 // protobuf
        ]
    }
}


protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.11.4'
    }
}

dependencies {
    compile 'com.google.protobuf:protobuf-java:3.11.4'
    compile 'org.gradle:gradle-tooling-api:6.2.1'
    compile "org.java-websocket:Java-WebSocket:1.4.0"
    compile "com.google.dagger:dagger:2.26"
    annotationProcessor "com.google.dagger:dagger-compiler:2.26"
    runtimeOnly 'org.slf4j:slf4j-simple:1.7.30'
    testImplementation 'junit:junit:4.13'
}

shadowJar {
    minimize()
}

// Use CreateStartScripts to generate a start script of the shadowjar
// This is done to match the gradle wrapper start script
task createStartScripts(type: CreateStartScripts) {
    dependsOn shadowJar
    outputDir = file('build/customScripts')
    mainClassName = 'com.github.badsyntax.gradletasks.Application'
    applicationName = project.name
    classpath = files(shadowJar.outputs.files)
}

task generateLib(type: Copy) {
    dependsOn build, createStartScripts

    from file("$buildDir/lib/${project.name}-all.jar")
    into file("$buildDir/../../lib/${project.name}-all.jar")

    from "$buildDir/customScripts/${project.name}", "$buildDir/customScripts/${project.name}.bat"
    into "$buildDir/../../lib"
}
