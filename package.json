{
  "name": "vscode-gradle",
  "displayName": "Gradle Tasks",
  "description": "Run gradle tasks in VS Code",
  "version": "0.0.0",
  "private": true,
  "publisher": "richardwillis",
  "icon": "icon.png",
  "readme": "README.md",
  "author": "Richard Willis <willis.rh@gmail.com>",
  "maintainers": [
    "Richard Willis <willis.rh@gmail.com>"
  ],
  "bugs": {
    "url": "https://github.com/badsyntax/vscode-gradle/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/badsyntax/vscode-gradle/"
  },
  "license": "SEE LICENSE IN LICENSE.md",
  "engines": {
    "vscode": "^1.39.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "java",
    "gradle",
    "compile",
    "build",
    "tasks"
  ],
  "activationEvents": [
    "onCommand:workbench.action.tasks.runTask",
    "onCommand:gradle.refresh",
    "onCommand:gradle.runTask",
    "workspaceContains:gradlew",
    "workspaceContains:gradlew.bat",
    "onView:gradle"
  ],
  "main": "./out/extension",
  "contributes": {
    "problemMatchers": [
      {
        "owner": "gradle",
        "name": "gradle",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^.*(FAILURE):\\s*(.*)$",
          "severity": 1,
          "message": 2
        }
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "gradle-tree-view",
          "name": "Gradle Tasks",
          "when": "gradle:showTasksExplorer"
        }
      ]
    },
    "commands": [
      {
        "command": "gradle.runTask",
        "title": "Run Task"
      },
      {
        "command": "gradle.openBuildFile",
        "title": "Open Build File"
      },
      {
        "command": "gradle.refresh",
        "title": "Gradle: Refresh Tasks",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "gradle.runTask",
          "when": "false"
        },
        {
          "command": "gradle.openBuildFile",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "gradle.refresh",
          "when": "view == gradle-tree-view",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "gradle.runTask",
          "when": "view == gradle-tree-view && viewItem == task"
        },
        {
          "command": "gradle.openBuildFile",
          "when": "view == gradle-tree-view && viewItem == buildFile"
        }
      ]
    },
    "configuration": {
      "id": "gradle",
      "type": "object",
      "title": "Gradle",
      "properties": {
        "gradle.autoDetect": {
          "type": "string",
          "enum": [
            "off",
            "on"
          ],
          "default": "on",
          "scope": "resource",
          "description": "Controls whether gradle tasks should be automatically detected"
        },
        "gradle.enableTasksExplorer": {
          "type": "boolean",
          "default": true,
          "description": "Enable an explorer view for gradle tasks"
        },
        "gradle.tasksArgs": {
          "type": "string",
          "default": "--all",
          "scope": "resource",
          "description": "Custom gradle tasks arguments"
        },
        "gradle.customBuildFile": {
          "type": "string",
          "default": "",
          "scope": "resource",
          "description": "Filename of the gradle build file"
        },
        "gradle.explorerNestedSubProjects": {
          "type": "boolean",
          "default": true,
          "description": "Show nested sub-projects in the explorer"
        }
      }
    },
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "https://schemastore.azurewebsites.net/schemas/json/package.json"
      }
    ],
    "taskDefinitions": [
      {
        "type": "gradle",
        "required": [
          "script",
          "fileName"
        ],
        "properties": {
          "script": {
            "type": "string",
            "description": "The task script name"
          },
          "fileName": {
            "type": "string",
            "description": "The filename of the build file that provides the tasks"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "node ./out/test/runTest.js",
    "pretest": "npm run compile",
    "lint": "npm run lint:prettier && npm run lint:tslint",
    "lint:prettier": "prettier --check \"**/*.{ts,js,json}\"",
    "lint:tslint": "tslint -c tslint.json 'src/**/*.ts'",
    "format": "prettier --write '**/*.{ts,js,json}'"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.12.7",
    "@types/sinon": "^7.5.0",
    "@types/vscode": "^1.40.0",
    "glob": "^7.1.6",
    "mocha": "^6.2.2",
    "prettier": "^1.19.1",
    "sinon": "^7.5.0",
    "tslint": "^5.20.1",
    "typescript": "^3.7.2",
    "vscode-test": "^1.2.3"
  },
  "prettier": {
    "singleQuote": true,
    "tabWidth": 2,
    "printWidth": 80
  }
}
