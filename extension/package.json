{
  "name": "vscode-gradle",
  "displayName": "Gradle Tasks",
  "description": "Run Gradle tasks in VS Code",
  "version": "0.0.0",
  "private": true,
  "publisher": "richardwillis",
  "icon": "icon.png",
  "readme": "README.md",
  "author": "Richard Willis <willis.rh@gmail.com>",
  "maintainers": [
    "Richard Willis <willis.rh@gmail.com>"
  ],
  "bugs": {
    "url": "https://github.com/badsyntax/vscode-gradle/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/badsyntax/vscode-gradle/"
  },
  "license": "SEE LICENSE IN LICENSE.md",
  "engines": {
    "vscode": "^1.45.0",
    "node": "^12.10.0",
    "npm": "^6.10.3"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "java",
    "gradle",
    "compile",
    "build",
    "tasks"
  ],
  "activationEvents": [
    "workspaceContains:gradlew",
    "workspaceContains:gradlew.bat"
  ],
  "main": "./dist/extension",
  "contributes": {
    "problemMatchers": [
      {
        "owner": "gradle",
        "name": "gradle",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^.*(FAILURE):\\s*(.*)$",
          "severity": 1,
          "message": 2
        }
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "gradleTreeView",
          "name": "Gradle Tasks",
          "when": "gradle:showTasksExplorer"
        }
      ]
    },
    "commands": [
      {
        "command": "gradle.runTask",
        "title": "%extension.command.runTask.title%",
        "icon": {
          "light": "resources/light/run.svg",
          "dark": "resources/dark/run.svg"
        }
      },
      {
        "command": "gradle.debugTask",
        "title": "%extension.command.debugTask.title%",
        "icon": {
          "light": "resources/light/debug-and-run.svg",
          "dark": "resources/dark/debug-and-run.svg"
        }
      },
      {
        "command": "gradle.restartTask",
        "title": "%extension.command.restartTask.title%",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "gradle.showLogs",
        "title": "Show logs"
      },
      {
        "command": "gradle.showTasks",
        "title": "%extension.command.showTasks.title%"
      },
      {
        "command": "gradle.runTaskWithArgs",
        "title": "%extension.command.runTaskWithArgs.title%"
      },
      {
        "command": "gradle.debugTaskWithArgs",
        "title": "%extension.command.debugTaskWithArgs.title%"
      },
      {
        "command": "gradle.openBuildFile",
        "title": "%extension.command.openBuildFile.title%"
      },
      {
        "command": "gradle.cancelTask",
        "title": "%extension.command.cancelTask.title%"
      },
      {
        "command": "gradle.cancelTreeItemTask",
        "title": "%extension.command.cancelTreeItemTask.title%",
        "icon": {
          "light": "resources/light/stop.svg",
          "dark": "resources/dark/stop.svg"
        }
      },
      {
        "command": "gradle.explorerFlat",
        "title": "%extension.command.explorerFlat.title%",
        "icon": {
          "light": "resources/light/list-flat.svg",
          "dark": "resources/dark/list-flat.svg"
        }
      },
      {
        "command": "gradle.explorerTree",
        "title": "%extension.command.explorerTree.title%",
        "icon": {
          "light": "resources/light/list-tree.svg",
          "dark": "resources/dark/list-tree.svg"
        }
      },
      {
        "command": "gradle.killGradleProcess",
        "title": "%extension.command.killGradleProcess.title%"
      },
      {
        "command": "gradle.showProcessMessage",
        "title": "%extension.command.showProcessMessage.title%"
      },
      {
        "command": "gradle.refresh",
        "title": "%extension.command.refresh.title%",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "gradle.openSettings",
        "title": "%extension.command.openSettings.title%",
        "icon": {
          "light": "resources/light/gear.svg",
          "dark": "resources/dark/gear.svg"
        }
      },
      {
        "command": "gradle.cancellingTreeItemTask",
        "title": "%extension.command.cancellingTreeItemTaskShow.title%",
        "icon": {
          "light": "resources/light/loading.svg",
          "dark": "resources/dark/loading.svg"
        }
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "gradle.showTasks",
          "when": "false"
        },
        {
          "command": "gradle.runTask",
          "when": "false"
        },
        {
          "command": "gradle.showLogs",
          "when": "false"
        },
        {
          "command": "gradle.debugTask",
          "when": "false"
        },
        {
          "command": "gradle.restartTask",
          "when": "false"
        },
        {
          "command": "gradle.openBuildFile",
          "when": "false"
        },
        {
          "command": "gradle.runTaskWithArgs",
          "when": "false"
        },
        {
          "command": "gradle.debugTaskWithArgs",
          "when": "false"
        },
        {
          "command": "gradle.cancelTask",
          "when": "false"
        },
        {
          "command": "gradle.cancelTreeItemTask",
          "when": "false"
        },
        {
          "command": "gradle.explorerFlat",
          "when": "false"
        },
        {
          "command": "gradle.explorerTree",
          "when": "false"
        },
        {
          "command": "gradle.showProcessMessage",
          "when": "false"
        },
        {
          "command": "gradle.openSettings",
          "when": "false"
        },
        {
          "command": "gradle.cancellingTreeItemTask",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "gradle.openSettings",
          "when": "view == gradleTreeView",
          "group": "navigation@0"
        },
        {
          "command": "gradle.explorerFlat",
          "when": "view == gradleTreeView && !gradle:explorerCollapsed",
          "group": "navigation@1"
        },
        {
          "command": "gradle.explorerTree",
          "when": "view == gradleTreeView && gradle:explorerCollapsed",
          "group": "navigation@2"
        },
        {
          "command": "gradle.refresh",
          "when": "view == gradleTreeView",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "gradle.runTask",
          "when": "view == gradleTreeView && viewItem =~ /^debugTask$|^task$/",
          "group": "run@0"
        },
        {
          "command": "gradle.runTaskWithArgs",
          "when": "view == gradleTreeView && viewItem =~ /^debugTask$|^task$/",
          "group": "run@1"
        },
        {
          "command": "gradle.debugTask",
          "when": "view == gradleTreeView && viewItem == debugTask",
          "group": "debug@0"
        },
        {
          "command": "gradle.debugTaskWithArgs",
          "when": "view == gradleTreeView && viewItem == debugTask",
          "group": "debug@1"
        },
        {
          "command": "gradle.debugTask",
          "when": "view == gradleTreeView && viewItem == debugTask",
          "group": "inline@0"
        },
        {
          "command": "gradle.runTask",
          "when": "view == gradleTreeView && viewItem =~ /^debugTask$|^task$/",
          "group": "inline@1"
        },
        {
          "command": "gradle.restartTask",
          "when": "view == gradleTreeView && viewItem == runningTask",
          "group": "inline@2"
        },
        {
          "command": "gradle.cancelTreeItemTask",
          "when": "view == gradleTreeView && viewItem == runningTask",
          "group": "inline@3"
        },
        {
          "command": "gradle.cancellingTreeItemTask",
          "when": "view == gradleTreeView && viewItem == cancellingTask",
          "group": "inline@4"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceFilename =~ /^((?!settings).)*\\.gradle(\\.kts)?$/",
          "command": "gradle.showTasks",
          "group": "gradle@0"
        }
      ],
      "editor/context": [
        {
          "when": "resourceFilename =~ /^((?!settings).)*\\.gradle(\\.kts)?$/",
          "command": "gradle.showTasks",
          "group": "gradle@0"
        }
      ]
    },
    "configuration": {
      "id": "gradle",
      "type": "object",
      "title": "Gradle",
      "properties": {
        "gradle.autoDetect": {
          "type": "string",
          "enum": [
            "off",
            "on"
          ],
          "default": "on",
          "scope": "resource",
          "description": "%extension.config.autoDetect.description%"
        },
        "gradle.enableTasksExplorer": {
          "type": "boolean",
          "default": true,
          "scope": "window",
          "description": "%extension.config.enableTasksExplorer.description%"
        },
        "gradle.debug": {
          "type": "boolean",
          "default": false,
          "scope": "window",
          "description": "%extension.config.debug.description%"
        },
        "gradle.focusTaskInExplorer": {
          "type": "boolean",
          "default": true,
          "scope": "window",
          "description": "%extension.config.focusTaskInExplorer.description%"
        },
        "gradle.javaDebug": {
          "type": "object",
          "description": "%extension.config.javaDebug.description%",
          "scope": "resource",
          "properties": {
            "tasks": {
              "type": "array",
              "default": [
                "run",
                "runBoot",
                "test",
                "intTest",
                "integration"
              ],
              "description": "%extension.config.javaDebug.tasks.description%"
            }
          },
          "required": [
            "tasks"
          ],
          "default": {
            "tasks": [
              "run",
              "runBoot",
              "test",
              "intTest",
              "integration"
            ]
          }
        },
        "gradle.taskPresentationOptions": {
          "type": "object",
          "description": "%extension.config.taskPresentationOptions.description%",
          "scope": "window",
          "properties": {
            "reveal": {
              "type": "string",
              "enum": [
                "always",
                "never",
                "silent"
              ],
              "default": "always",
              "description": "%extension.config.taskPresentationOptions.reveal.description%"
            },
            "focus": {
              "type": "boolean",
              "default": true,
              "description": "%extension.config.taskPresentationOptions.focus.description%"
            },
            "echo": {
              "type": "boolean",
              "default": true,
              "description": "%extension.config.taskPresentationOptions.echo.description%"
            },
            "showReuseMessage": {
              "type": "boolean",
              "default": false,
              "description": "%extension.config.taskPresentationOptions.showReuseMessage.description%"
            },
            "panel": {
              "type": "string",
              "enum": [
                "shared",
                "dedicated",
                "new"
              ],
              "default": "shared",
              "description": "%extension.config.taskPresentationOptions.panel.description%"
            },
            "clear": {
              "type": "boolean",
              "default": true,
              "description": "%extension.config.taskPresentationOptions.clear.description%"
            }
          },
          "default": {
            "reveal": "always",
            "focus": false,
            "echo": true,
            "showReuseMessage": false,
            "panel": "shared",
            "clear": false
          }
        }
      }
    },
    "jsonValidation": [
      {
        "fileMatch": "package.json",
        "url": "https://schemastore.azurewebsites.net/schemas/json/package.json"
      }
    ],
    "taskDefinitions": [
      {
        "type": "gradle",
        "required": [
          "id",
          "script",
          "description",
          "group",
          "project",
          "buildFile",
          "rootProject",
          "path",
          "projectFolder",
          "workspaceFolder",
          "args",
          "javaDebug"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifoier for this task"
          },
          "script": {
            "type": "string",
            "description": "The task script name"
          },
          "description": {
            "type": "string",
            "description": "Description of the task"
          },
          "group": {
            "type": "string",
            "description": "Task group"
          },
          "project": {
            "type": "string",
            "description": "The project this task belongs to"
          },
          "buildFile": {
            "type": "string",
            "description": "The full path to task project build file"
          },
          "rootProject": {
            "type": "string",
            "description": "The root project this task belongs to"
          },
          "path": {
            "type": "string",
            "description": "The full task path"
          },
          "projectFolder": {
            "type": "string",
            "description": "The gradle project folder path"
          },
          "workspaceFolder": {
            "type": "string",
            "description": "The workspace folder path"
          },
          "args": {
            "type": "string",
            "description": "Task args"
          },
          "javaDebug": {
            "type": "boolean",
            "description": "Debug JavaExec task when executing"
          }
        }
      }
    ]
  },
  "scripts": {
    "test": "node ./out/test/runTests.js",
    "lint": "npm run lint:prettier && npm run lint:eslint",
    "lint:prettier": "prettier --check \"**/*.{ts,js,json,svg,md,yml}\"",
    "lint:eslint": "eslint . --ext .js,.ts",
    "lint:fix": "npm run lint:fix:prettier && npm run lint:eslint -- --fix",
    "lint:fix:prettier": "prettier --write '**/*.{json,svg,md,yml}'",
    "compile:prod": "webpack --mode production",
    "compile:dev": "webpack --mode development",
    "compile:test": "tsc -p ./",
    "install:ext": "code --install-extension vscode-gradle-0.0.0.vsix --force",
    "preinstall:ext": "vsce package",
    "snyk-protect": "snyk protect",
    "prepare": "npm run snyk-protect"
  },
  "dependencies": {},
  "devDependencies": {
    "@grpc/grpc-js": "^1.0.2",
    "@types/glob": "^7.1.1",
    "@types/google-protobuf": "^3.7.2",
    "@types/mocha": "^7.0.2",
    "@types/node": "^12.12.39",
    "@types/sinon": "^9.0.0",
    "@types/vscode": "^1.45.0",
    "@typescript-eslint/eslint-plugin": "^2.33.0",
    "@typescript-eslint/parser": "^2.33.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-plugin-prettier": "^3.1.3",
    "eslint-plugin-sonarjs": "^0.5.0",
    "fast-glob": "^3.2.2",
    "get-port": "^5.1.1",
    "google-protobuf": "^3.12.0",
    "grpc-tools": "^1.8.1",
    "mocha": "^7.1.2",
    "prettier": "^2.0.4",
    "sinon": "^9.0.2",
    "snyk": "^1.320.3",
    "ts-loader": "^7.0.4",
    "ts-protoc-gen": "^0.12.0",
    "typescript": "^3.9.2",
    "vsce": "^1.75.0",
    "vscode-nls": "^4.1.2",
    "vscode-nls-dev": "^3.3.1",
    "vscode-test": "^1.3.0",
    "webpack": "^4.43.0",
    "webpack-cli": "^3.3.11"
  },
  "snyk": true
}
